#version 430
#extension GL_NV_shadow_samplers_cube : enable

layout(location=2) uniform vec4 lightPos;
layout(location=3) uniform samplerCube cubeMap;
layout (location=6) uniform float radius;

in vec4 fcolor;
in vec4 fpos;
in vec4 fnorm;
flat in int fTextType;
in vec4 fcubeTexCoord;

out vec4 gli_FragColor;

void main()
{	
	vec4 textureColor = vec4(1.0f,0.0f,0.0f,1.0f);
	float radius = distance(fpos, vec4(0.0f, 0.0f, 0.0f, 1.0f));

	if(fTextType==0)
	{ //Cubemap sphere
    if(0.9 < radius && radius < 1.0)
        {
            gli_FragColor = vec4(0.0f,0.0f,0.5-(1-radius)*5,1.0f);
        }
        if(1.0 < radius && radius < 1.03)
        {
            gli_FragColor = vec4(0.0f,0.5-(radius-1)*5,0.0f,1.0f);
        }
        if(1.03 < radius && radius < 1.07)
        {
            gli_FragColor = vec4(0.5-(radius-1)*2,0.5-(radius-1)*6,0.1f,1.0f);
        }
        if(1.07 < radius)// && radius < 1.1)
        {
            gli_FragColor = vec4(0.95-(radius-1)*2,0.95-(radius-1),1.0f,1.0f);
        }


	} else if(fTextType==1){

		//textureColor = texture2D(cubeMap, tempCoords);
		gli_FragColor = textureColor;

	}else if(fTextType==2){ //Skybox

		textureColor = texture(cubeMap,fpos.xyz);
		gli_FragColor = textureColor;

	}	else if (fTextType==3){

		float amb=0.5f;	
	float diffuse=0.0f;
	
	vec4 L=normalize(lightPos-fpos);
	float I=1.0f;
	float K=1.0f;
	
	diffuse=I*K*max(dot(L,fnorm),0.0f);
	
	float specular=0.0f;
	
        gli_FragColor = fcolor*(amb+diffuse+specular);
	}
}